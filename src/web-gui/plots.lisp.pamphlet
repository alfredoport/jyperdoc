\documentclass{article}
\usepackage{noweb}
\begin{document}

\title{plots.lisp}
\author{Kai Kaminski}
\maketitle


\section{Code}

This file provides {\tt MAKE-PLOT}, which creates an SVG plots through
{\tt PLOT-2D} from {\tt AXIOM-PLOT.LISP.PAMPHLET}. It also installs an
Araneida handler, which delivers plots to the browser. The plots are
accessible at /plots/plot-id relative to the base URL (see {\tt
  AXIOM-HUB.LISP.PAMPHLET}).


\subsubsection{FallbackPlot}
This variable contains an error message in SVG format, which is
delivered if the requested plot doesn't exist.

<<fallbackPlot>>=
(defparameter *fallback-plot*
  "<?xml version=\"1.0\"?>
<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\" 
              \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">
<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10cm\" height=\"10cm\">
  <text x=\"5cm\" y=\"5cm\" text-anchor=\"middle\">
    Error: this plot doesn't exist.
  </text>
</svg>
")

@


\subsubsection{Handler}
The usual Araneida handler setup.

<<handler>>=
(defclass plot-handler (handler) ())

(defmethod handle-request-response ((handler plot-handler) method request)
  (declare (ignore method))
  (request-send-headers request
			:content-type "image/svg+xml")
  (write-string (gethash (request-path-info request) *plots* *fallback-plot*)
		(request-stream request)))

(install-handler (http-listener-handler *listener*)
		 (make-instance 'plot-handler)
		 (urlstring (merge-url *axiom-url* "/plots/")) nil)
@


\subsubsection{MakePlot}
The function {\tt MAKE-PLOT} creates an SVG plot for the given plot data and stores
it for later delivery. The function {\tt GEN-PLOT-ID} generates a
unique plot ID, currently a non-negative integer.

<<makePlot>>=
(let ((counter 0))
  (defun gen-plot-id ()
    (format nil "~a" (incf counter))))

(defun make-plot (plot)
  (let* ((id (gen-plot-id))
	 (range (getf plot :range))
	 (branches (getf plot :branches))
	 (title (getf plot :title))
	 (unit (getf plot :unit))
	 (svg (make-string-output-stream))
	 (dimensions (plot-2d svg title 0.5 0.2 0.5 unit range branches)))
    (setf (gethash id *plots*) (get-output-stream-string svg))
    (list* (format nil "/plots/~A" id)
	  dimensions)))

@

<<*>>=
(in-package :axiom-hub)

(defparameter *plots* (make-hash-table :test #'equal))

<<fallbackPlot>>

<<handler>>

<<makePlot>>

@


\section{License}

<<license>>=
Copyright (c) 2005, Kai Kaminski
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@
\end{document}